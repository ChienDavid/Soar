sp {copy*evaluate-rl*feature
   (state <s> ^operator <o> +)
   (<o> ^feature-lists <fl>)
   (<fl> ^feature <f>
         ^feature <fnew>)
   (<f> ^id <pid>
        ^all <pall>)
   (<fnew> ^previd <pid>)
-->
   (<fnew> ^all <pall>)
}

sp {apply*evaluate-rl
   (state <s> ^operator <o>
              ^superstate <ss>)
   (<o> ^name evaluate-rl
        ^superoperator <i>
        ^id <id>)
   (<i> ^moving-block.name <blockA>
        ^destination.name <object>
        ^feature-lists <fl>)
   (<fl> ^feature <f>)
   (<f> ^id <id>
#        ^acceptable true
   )
-->
#   (write (crlf)
#          <i> | SUPPORTED BY | <id>
#          (crlf))
   (<ss> ^operator <i> = .0)
}

sp {apply*evaluate-rl*alert
   (state <s> ^operator <o>
              ^superstate <ss>)
   (<o> ^name evaluate-rl
        ^superoperator <i>
        ^id <id>)
   (<i> ^moving-block.name <blockA>
        ^destination.name <object>
        ^feature-lists <fl>)
   (<fl> ^feature <f>)
   (<f> ^id <id>
#        ^acceptable true
   )
-->
   (write (crlf)
          |RL-RULE CHUNKED|)
}

#sp {elaborate*feature*acceptable
#   (state <s> ^operator <o> +)
#   (<o> ^feature-lists <fl>)
#   (<fl> ^feature <f>)
#-->
#   (<f> ^acceptable true)
#}
#
#sp {reject*acceptable*lower-count
#   (state <s> ^operator <o> +)
#   (<o> ^feature-lists <fl>)
#   (<fl> ^feature <f0>
#         ^feature <f1>)
#   (<f0> ^count <c0>)
#   (<f1> ^count < <c0>)
#-->
#   (<f1> ^acceptable true -)
#}
#
#sp {reject*acceptable*lower-id
#   "This is an arbitrary way to avoid multiple RL-rules (with the same count) for the same operator."
#   (state <s> ^operator <o> +)
#   (<o> ^feature-lists <fl>)
#   (<fl> ^feature <f0>
#         ^feature <f1>)
#   (<f0> ^count <c0>
#         ^id <id0>)
#   (<f1> ^count <c0>
#         ^id <id1> < <id0>)
#-->
#   (<f1> ^acceptable true -)
#}
